API server - центральный компонент единственный кто общается с etcd работает по rest api
Controller-manager - набор контроллеров и контролирует все абстракции и является сборщиком мусора
Scheduler - назначает поды на ноды (в зависимости QOS, priority class, requested resources)
kublet - работает на каждой ноде, единственный компонент работаещий не в docker, отдает команды docker, создает PODы и делает пробы

   user      kube-api         etcd           controller        sheduler        kublet          docker
    |           |               |              manager             |              |               |
    |           |               |                |                 |              |               |
  create        |               |                |                 |              |               |
replicaset-->   ._____write---->|                |                 |              |               |
    |           |<--------------|                |                 |              |               |
    |<----------|               |                |                 |              |               |
    |           .___watch(create new replicaset->|                 |              |               |
    |           |<---------bind pods_____________.                 |              |               |
    |           ._____write---->|                |                 |              |               |
    |           |<--------------|                |                 |              |               |
    |           |------------------------------->|                 |              |               |
    |           |<-------------------------------|                 |              |               |
    |           |________ watch new pods-------------------------->|              |               | 
    |           |<--------------------------------------------bind npods          |               |
    |           ._____write---->|                |                 |              |               |
    |           |<--------------|                |                 |              |               |
    |           |------------------------------------------------->|              |               |
    |           .______watch(bound pods)----------------------------------------->|               |
    |           |               |                |                 |              .__docker run-->|
    |           |               |                |                 |              |<--------------|
    |           |<--------------------------------------------------pods status___.               |
    |           ._____write---->|                |                 |              |               |
    |           |<--------------|                |                 |              |               |
    |           |---------------------------------------------------------------->|               |
    
создаем фанифест из файла:
 - запрос уходит в API он его принимает и отдает манифест в etcd
 - Controller-manager смотрит в API и видит что появился новый replicaset и контроллер генерирует описание пода и передает API которое в свою очередь дополняет эти данные
 - Scheduler видит описание новых подов и назначает им ноды
 - kublet на какой-то конкретной ноде видит в API появился манифест и поле nodename совпадает с его нодой и он передает информацию в докер тот создает и возвращает ответ kublet который в свою очередь передает её в API
